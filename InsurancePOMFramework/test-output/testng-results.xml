<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="356791" started-at="2021-01-16T13:19:50Z" finished-at="2021-01-16T13:25:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="356791" started-at="2021-01-16T13:19:50Z" finished-at="2021-01-16T13:25:47Z">
      <class name="TestCases.GetQuote">
        <test-method status="PASS" signature="ViewGetQuote(java.util.Hashtable)[pri:0, instance:TestCases.GetQuote@2b2948e2]" name="ViewGetQuote" duration-ms="107183" started-at="2021-01-16T18:49:53Z" data-provider="getViewGetQuote" finished-at="2021-01-16T18:51:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Year=1999.0, Comment=Positive Test, Phone=1.4842634683E10, Month=April, AptNo=132.0, Zipcode=12401.0, Email=Johnsmith@gmail.com, Date=12.0, PageTitle=Liberty Mutual | Customize your insurance coverage and get a quote | Liberty Mutual, LastName=Smith, TypeBuilding=Low rise (8 stories or less), StreetAdd=132, My Street, Kingston, New York 12401., FirstName=John, ValueStuf=5000.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewGetQuote -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.GetQuote@2b2948e2]" name="flushReports" is-config="true" duration-ms="3001" started-at="2021-01-16T18:51:40Z" finished-at="2021-01-16T18:51:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="verifyErrorMessagesNull(java.util.Hashtable)[pri:0, instance:TestCases.GetQuote@2b2948e2]" name="verifyErrorMessagesNull" duration-ms="56592" started-at="2021-01-16T18:51:43Z" data-provider="getViewGetQuoteNull" finished-at="2021-01-16T18:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PhoneError=Please provide information for Phone Number, msgMail=Please provide information for Email Address, Comment=Null Data and Assert Error, Zipcode=12401.0, HowLong=Please provide information for How long have you lived at this address?, DOBerror=Please provide information for Date of Birth, LastName=Smith, CurrentlyError=Please provide information for Do you currently have an auto insurance policy with Liberty Mutual?, RoughlyError=Please provide information for Roughly, how much is all your stuff worth?, TypeBuilding=Please provide information for What type of building is this rental in?, StreetAdd=Please provide information for Street Address, FirstName=John}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMessagesNull -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.GetQuote@2b2948e2]" name="flushReports" is-config="true" duration-ms="2922" started-at="2021-01-16T18:52:40Z" finished-at="2021-01-16T18:52:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="verifyErrorMessagesInvalid(java.util.Hashtable)[pri:0, instance:TestCases.GetQuote@2b2948e2]" name="verifyErrorMessagesInvalid" duration-ms="180747" started-at="2021-01-16T18:52:43Z" data-provider="getViewGetQuoteNegative" finished-at="2021-01-16T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Date=99.0, AptNo=132.0, Month=April, StreetAdd=123.0, PageTitle=Liberty Mutual | Customize your insurance coverage and get a quote | Liberty Mutual, invalidPhone=Please enter a valid phone number., invalidDOB=Please enter a valid date of birth., invalidAddress=Street address must contain letters and numbers, and cannot be a P.O. Box., Phone=148.0, LastName=456.0, Comment=Invalid Input and Assert Error, FirstName=123.0, TypeBuilding=Low rise (8 stories or less), Zipcode=12401.0, ValueStuf=5000.0, Year=1000.0, invalidEmail=Please enter a valid email address., Email=123.0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='widget-3']/div[2]/div[1]/div/div/b"}
  (Session info: chrome=79.0.3945.130)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PCIN480905', ip: '192.168.1.100', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.130, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\873463\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56074}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: f05ed007b1e70fd44936c2201c2755e3
*** Element info: {Using=xpath, value=//*[@id='widget-3']/div[2]/div[1]/div/div/b}]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='widget-3']/div[2]/div[1]/div/div/b"}
  (Session info: chrome=79.0.3945.130)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PCIN480905', ip: '192.168.1.100', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.130, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\873463\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56074}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: f05ed007b1e70fd44936c2201c2755e3
*** Element info: {Using=xpath, value=//*[@id='widget-3']/div[2]/div[1]/div/div/b}
	at org.testng.Assert.fail(Assert.java:94)
	at baseClasses.PageBaseClass.reportFail(PageBaseClass.java:77)
	at PageClasses.GetQuotePage.ViewQuote(GetQuotePage.java:27)
	at TestCases.GetQuote.verifyErrorMessagesInvalid(GetQuote.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMessagesInvalid -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.GetQuote@2b2948e2]" name="flushReports" is-config="true" duration-ms="3208" started-at="2021-01-16T18:55:44Z" finished-at="2021-01-16T18:55:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- TestCases.GetQuote -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
